---
  import "~/styles/base.css"
  import 'wowjs/css/libs/animate.css'
  import Header from "~/components/astro/headers/BasicHeader.astro"
  import Footer from "~/components/astro/footers/BasicFooter.astro";

  interface BlogFrontMatter {
    frontmatter :{
      title: string;
      img: string;
    }

  }

  const { frontmatter } = Astro.props as BlogFrontMatter;

  import i18next, { t } from "i18next";

---

<!DOCTYPE html>
<html lang={i18next.language}>

<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width">
<link rel="icon" type="image/x-icon" href="/favicon.ico" />
<title>{frontmatter.title}</title>
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=IBM+Plex+Sans:wght@400;500;700&display=swap" rel="stylesheet">
</head>

<script async src="https://www.googletagmanager.com/gtag/js?id=G-TVS3GNG308"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-TVS3GNG308');
</script>
<body class="antialiased text-gray-900 dark:text-slate-300 tracking-tight bg-white dark:bg-slate-900">
<Header />
  <main id="swup">
    <article class="prose dark:prose-invert lg:prose-xl mx-auto p-5 mt-12">
      <h1>{frontmatter.title}</h1>
      <img src={frontmatter.img} />
      <slot />
    </article>
  </main>
<Footer />
</body>

</html>

<style>
:root {}

.language-id {
  opacity: "75%"
}

:global(body) {
  font-family: 'IBM Plex Sans', sans-serif;
}

:global(.btn, .btn-sm) {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border-radius: 0.25rem;
  border-width: 1px;
  border-color: transparent;
  font-weight: 500;
  line-height: 1.375;
  transition-property: color, background-color, border-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
  transition-duration: .15s;
  transition-timing-function: cubic-bezier(.4, 0, .2, 1);
  padding: 0.75rem 1.5rem;
  --tw-shadow: 0 10px 15px -3px rgba(0, 0, 0, .04), 0 4px 6px -2px rgba(0, 0, 0, .02);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
</style>

<script is:inline>
function toggleDarkMode() {
  document.documentElement.classList.toggle("dark");
  localStorage.theme = document.documentElement.classList.contains("dark") ? "dark" : "light"
}
window.toggleDarkMode = toggleDarkMode

if (localStorage.theme === 'dark' || (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
  document.documentElement.classList.add('dark')
} else {
  document.documentElement.classList.remove('dark')
}

function toggleMenu() {
  document.getElementById("menu").classList.toggle("hidden");
}
window.toggleMenu = toggleMenu
</script>